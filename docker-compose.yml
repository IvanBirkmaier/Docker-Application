version: '3.8'
services:
  getdata:
    image: getdata:latest
    build:
      context: ./getdataservice
      dockerfile: Dockerfile
    depends_on:
      - createbucketsminio
    container_name: 'getData'
    environment:
      ALPHA_VANTAGE_FREE_KEY: ${ALPHA_VANTAGE_FREE_KEY}
    volumes:
      - ./data:/data
    networks:
      - htw-network
  minio:
    image: minio/minio:RELEASE.2022-04-01T03-41-39Z
    restart: always
    container_name: 'minio'
    environment: 
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: 
        - "9000:9000"
        - "9001:9001"
    volumes:
        - ./data:/data
    command: server /data --console-address ":9001"
    networks:
      - htw-network
  createbucketsminio:
    image: minio/mc:RELEASE.2022-04-01T23-44-48Z
    container_name: 'minio_client'
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      while ! curl --silent -o /dev/null http://minio:9000; do echo 'Wait minio to startup...' && sleep 0.3; done; 
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb -p myminio/rohdata;
      /usr/bin/mc policy set public myminio/rohdata;
      /usr/bin/mc mb -p myminio/csv;
      /usr/bin/mc policy set public myminio/csv;
      /usr/bin/mc mb -p myminio/forecast;
      /usr/bin/mc policy set public myminio/forecast;
      exit 0;
      "
    networks:
      - htw-network
  forecastservice:
    image: forecast:latest
    build:
      context: ./forecastservice
      dockerfile: Dockerfile
    depends_on:
      - createbucketsminio
      - getdata
    container_name: 'forecast'
    environment:
      GETDATASERVICE_NAME: ${GETDATASERVICE_NAME}
    volumes:
      - ./data:/data
    networks:
      - htw-network
  webserver:
    image: webserver:latest
    build:
      context: ./webserver
      dockerfile: Dockerfile
    depends_on:
      - createbucketsminio
    container_name: 'webserver'
    ports:
        - "8081:8081"
    volumes:
      - ./data:/etc/nginx/data
    networks:
      - htw-network
  restcontroller:
    image: restcontroller:latest
    build:
      context: ./restcontroller
      dockerfile: Dockerfile
    container_name: 'restcontroller'
    ports:
        - 12345:12345
    networks:
      - htw-network
networks:
  htw-network:
    name: htw-network